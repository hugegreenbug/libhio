#! /bin/bash
#----------------------------------------------------------------------------
# buildhio - build libhio from source tree 
#
# Change History: 
#   20150428  cgw  Initial version
#----------------------------------------------------------------------------
synexit() {
  echo ""
  if [[ -n $* ]]; then echo $*; echo ""; fi
  echo "buildhio - build libhio and check results"
  echo ""
  echo "  Syntax:"
  echo "    buildhio [-acfx] [-d dir] [-n name]"
  echo "             [-l module]...  [-s oldmod,newmod]..."
  echo "             [-h]"
  echo ""
  echo "  Options:"   
  echo "    -a                  Run autogen (implies -c)"
  echo "    -c                  Run configure (implies -f)"
  echo "    -f                  Full build (make clean)"  
  echo "    -x                  Build extras (docs and dist)"
  echo "    -d dir              Build directory (default $dir)"
  echo "    -n name             Build name for results messages"
  echo "    -l module           Issue module load"
  echo "    -s oldmod,newmod    Issue module swap"
  echo "    -h                  Display this help"
  echo ""
  echo "  Results logged to $logfn"
  echo ""
  echo "  Cornell Wright  cornell@lanl.gov"
  
  exit 8
}

cmd() {
  echo "$host ---> $*" 2>&1 | tee -a $log
  eval $*              2>&1 | tee -a $log
}

msg() { 
  echo "$host $*" 2>&1 | tee -a $log
}

# Set up temporary log directory and file
logfn="hiobuild.out"
tdir=$(mktemp -d /tmp/hiobuild.tmp.XXXX)
log="$tdir/$logfn"
host=`hostname -s`

args=$*
msg "buildhio $args: Starting"

if [[ ${OSTYPE:0:6} != "darwin" ]]; then
  . $MODULESHOME/init/bash
  mod_script="hiobuild.modules.bash"
  echo "# Created by hiobuild at `date`" > $mod_script
  echo ". \$MODULESHOME/init/bash" >> $mod_script
else
  mod_script=""
fi  

#----------------------------------------------------------------------------
# Parse arguments
#----------------------------------------------------------------------------
autogen=0
configure=0
full=0
extra=0
dir=$(dirname ${BASH_SOURCE[0]})   # -d defaults to location of this script
name=""
while getopts "hacfxd:l:s:n:" optname; do
  case $optname in
    h ) synexit;;
    a ) autogen=1;;
    c ) configure=1;;
    f ) full=1;;
    x ) extra=1;;
    d ) dir=$OPTARG;;
    l ) modload=$OPTARG
        echo "---> module load $modload" 2>&1 | tee -a $log
        module load $modload
        if [[ -n $mod_script ]]; then echo "module load $modload" >> $mod_script; fi
        ;;
    s ) modswap=(${OPTARG//,/ })
        echo "---> module swap ${modswap[*]}" 2>&1 | tee -a $log
        module swap ${modswap[*]}
        if [[ -n $mod_script ]]; then echo "module swap ${modswap[*]}" >> $mod_script; fi
        ;;
    n ) name=$OPTARG;;
   \? ) synexit "Error: invalid option";;
  esac
done
shift $((OPTIND - 1 ))
if [[ -n $1 ]]; then synexit "Error: extra parameters"; fi
if [[ -n $mod_script ]]; then 
  echo "module list" >> $mod_script
  echo "# --- end ---" >> $mod_script
fi

# Move log file to build directory
if [[ ! -d $dir ]]; then synexit "Error: directory $dir does not exist"; fi 
msg "---> cd $dir"
cd $dir 
mv -f $log .
log="$PWD/$logfn"
rm -fR $tdir

#----------------------------------------------------------------------------
# Build hio
#----------------------------------------------------------------------------
msg "hiobuild $args: Starting build at `date`"
if [[ ${OSTYPE:0:6} != "darwin" ]]; then cmd module list; fi
if [[ $autogen -gt 0 ]]; then
  cmd ./autogen.sh
  configure=1
fi

if [[ $configure -gt 0 ]]; then
  cmd ./configure
  full=1
fi;

if [[ $full -gt 0 ]]; then
  cmd make clean
fi

cmd make
if [[ ${OSTYPE:0:6} == "darwin" ]]; then
  files="src/.libs/libhio.1.dylib"
else
  files="src/.libs/libhio.so.1.0.0"
fi
files="$files test/.libs/error_test.x test/.libs/test01.x test/.libs/xexec.x"

if [[ $extra -gt 0 ]]; then
  cmd make docs
  files="$files design/libhio_api.pdf"
  cmd make dist
fi

#----------------------------------------------------------------------------
# Check log for errors, check for output files
#----------------------------------------------------------------------------

msg "====[HIOBUILD_RESULT_START]===($name)==========================================="
msg "buildhio $name: Checking $log for build problems"
sed1="s/error_test/err0r_test/g"
sed2="s/-Werror/-Werr0r/g"
sed3="s/-Wno-error/-Wno-err0r/g"
sed4="s/Warning: Linking the shared library libhio.la against the/W@rning: Linking the shared library libhio.la against the/g"
tmpfile="tmp.hiobuild.grep.out"
cat $log | sed -e $sed1 -e $sed2 -e "$sed3" -e "$sed4" | egrep -ni "error|warn|fail" 1>$tmpfile 2>&1
rc=$?
cat $tmpfile 2>&1 | tee -a $log
rm $tmpfile

msg "buildhio $name: Checking for build target files"
for f in $files; do
  if [[ ! -e $f ]]; then
    msg "Error: $f does not exist"
    rc=3
  fi
done

if [[ $rc -eq 1 ]]; then msg "buildhio $name: Build OK." 
else msg "buildhio $name: Build errors found, see above."
fi
msg "====[HIOBUILD_RESULT_END]===($name)============================================="
msg $bar 

msg "buildhio $name: Done at `date`"

# --- end of buildhio ---
